plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

version = "1.0.1+mc1.21-1.21.5"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "mapdistancefix" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

repositories {
    // Add repositories to retrieve artifacts from in here.
}

dependencies {
    minecraft "com.mojang:minecraft:${System.getenv('MINECRAFT_VERSION') ?: project.minecraft_version}"
    mappings "net.fabricmc:yarn:${System.getenv('YARN_MAPPINGS') ?: project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${System.getenv('LOADER_VERSION') ?: project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${System.getenv('FABRIC_VERSION') ?: project.fabric_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version_range", ">=1.21 <=1.21.5"
    inputs.property "loader_version", ">=0.16.14"
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version_range": ">=1.21 <=1.21.5",
                "loader_version": "0.16.14"
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
